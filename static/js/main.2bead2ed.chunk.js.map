{"version":3,"sources":["components/Header.js","components/Form.js","components/Todo.js","components/CheckAll.js","components/Filter.js","components/EditTodo.js","components/App.js","index.js"],"names":["Header","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","React","Component","Form","props","handleChange","e","setState","input","currentTarget","value","handleSubmit","preventDefault","state","onSubmit","this","onChange","Todo","handleChangeCompleted","completed","handleClickDelete","onDelete","handleClickEdit","editing","text","checked","onClick","CheckAll","allCompleted","Filter","filter","EditTodo","handleClickCancel","onCancel","currentId","App","newTodo","newTodos","todos","handleChangeAllCompleted","map","todo","handleChangeTodoAttribute","key","handleUpdateTodoText","handleClickDeleteCompleted","handleChangeFilter","filteredTodos","length","every","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bead2ed.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            /*\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\"></div>\r\n                        <div className=\"col-md-6\">\r\n                                <h1 className=\"headertodo\">todoリスト</h1>\r\n                        </div>\r\n                        <div className=\"col-md-3\"></div>\r\n                    </div>\r\n                </div>\r\n            */\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-info\">\r\n                <a className=\"navbar-brand\" href=\"#\">Todoリスト</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar1\" aria-controls=\"navbar1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse justify-content-center\" id=\"navbar1\">\r\n                    <div className=\"navbar-nav\">\r\n                        <a className=\"nav-item nav-link\" href=\"#\">link</a>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            input: \"\"\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"mt-5\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={this.state.input}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <button>追加</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({ input: e.currentTarget.value })\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        if(!this.state.input) return;\r\n        this.props.onSubmit(this.state.input);\r\n        this.setState({ input: \"\" })\r\n    }\r\n\r\n}\r\n\r\nexport default Form;","import React from 'react'\r\n\r\nclass Todo extends React.Component {\r\n    render() {\r\n        const { text, completed } = this.props\r\n        \r\n        return (\r\n            <div>\r\n                <label>\r\n                    <input type=\"checkbox\"\r\n                    checked={completed}\r\n                    onChange={this.handleChangeCompleted} />\r\n                    {text}\r\n                </label>\r\n                <button type=\"button\" className=\"btn btn-outline-primary\" onClick={this.handleClickEdit}>編集</button>\r\n                <button type=\"button\" className=\"btn btn-outline-danger\" onClick={this.handleClickDelete}>削除</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleChangeCompleted = () => {\r\n        const { onChange, id, completed } = this.props\r\n        onChange(id, 'completed', !completed);\r\n    }\r\n\r\n    handleClickDelete = () => {\r\n        const { onDelete, id } = this.props\r\n        onDelete(id);\r\n    }\r\n\r\n    handleClickEdit = () => {\r\n        const { onChange, id, editing } = this.props\r\n        onChange(id, 'editing', !editing);\r\n    }\r\n}\r\n\r\nexport default Todo;","import React from 'react'\r\n\r\nclass CheckAll extends React.Component {\r\n    render() {\r\n        const { allCompleted } = this.props\r\n        return (\r\n            <label>\r\n                <input type=\"checkbox\" checked={allCompleted} onChange={this.handleChange} />\r\n                全て{allCompleted ? '未完了' : '完了'}にする\r\n            </label>\r\n        )\r\n    }\r\n\r\n    handleChange = () => {\r\n        const { onChange, allCompleted } = this.props\r\n        onChange(!allCompleted)\r\n    }\r\n}\r\n\r\nexport default CheckAll;","import React from 'react'\r\n\r\nclass Filter extends React.Component {\r\n    render() {\r\n        const { filter } = this.props\r\n        return (\r\n            <select value={filter} onChange={this.handleChange}>\r\n                <option value =\"all\">全て</option>\r\n                <option value =\"uncompleted\">未完了</option>\r\n                <option value =\"completed\">完了済み</option>\r\n            </select>\r\n        )\r\n    }\r\n    handleChange = e => {\r\n        this.props.onChange(e.currentTarget.value)\r\n    }\r\n}\r\n\r\nexport default Filter;","import React from 'react'\r\n\r\nclass EditTodo extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            text: props.text\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\"\r\n                    value={this.state.text}\r\n                    onChange={this.handleChange}\r\n                />\r\n                <button type=\"button\" className=\"btn btn-outline-warning\" onClick={this.handleClickCancel}>キャンセル</button>\r\n                <button type=\"button\" className=\"btn btn-outline-primary\" onClick={this.handleSubmit}>更新</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({ text: e.currentTarget.value })\r\n    }\r\n\r\n    handleClickCancel = () => {\r\n        const { onCancel, id } = this.props;\r\n        onCancel(id, 'editing', false)\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const { onSubmit, id } = this.props\r\n        if(!this.props.text) return\r\n        onSubmit(id, this.state.text)\r\n    }\r\n}\r\n\r\nexport default EditTodo;","import React from 'react'\r\n\r\nimport './App.css';\r\n\r\nimport Header from './Header'\r\nimport Form from './Form'\r\nimport Todo from './Todo'\r\nimport CheckAll from './CheckAll'\r\nimport Filter from './Filter'\r\nimport EditTodo from './EditTodo'\r\n\r\n\r\nlet currentId = 0;\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filter: 'all',\r\n            todos: []\r\n            /*{\r\n                id: 0,\r\n                text: \"洗濯する\",\r\n            },\r\n            {\r\n                id: 1,\r\n                text: \"宿題する\",\r\n            },\r\n            {\r\n                id: 2,\r\n                text: \"腹筋する\",\r\n            }\r\n        */\r\n        }\r\n    }\r\n\r\n    /*\r\n    componentWillMount(){\r\n        this.fetchTasks()\r\n    }\r\n\r\n    fetchTasks(){\r\n        fetch(\"http://localhost:3001/tasks\") // データを取得しに行く\r\n        .then( response => response.json() ) // json型のレスポンスをオブジェクトに変換する\r\n        .then( json => { // オブジェクトに変換したレスポンスを受け取り、\r\n          this.setState({ tasks: json }) // Stateを更新する\r\n        })\r\n    }\r\n    */\r\n\r\n    render() {\r\n        const { todos, filter } = this.state\r\n        const filteredTodos = todos.filter(({ completed }) => {\r\n            switch (filter) {\r\n                case 'all':\r\n                    return true;\r\n\r\n                case 'uncompleted':\r\n                    return !completed;\r\n\r\n                case 'completed':\r\n                    return completed;\r\n\r\n                default:\r\n                    return true\r\n            }\r\n        });\r\n        return (\r\n            <div className=\"container text-center\" >\r\n\r\n                <Header />\r\n\r\n                <Form onSubmit={this.handleSubmit} />\r\n\r\n                <CheckAll allCompleted={\r\n                    todos.length > 0 && todos.every(({ completed }) => completed)\r\n                }\r\n                    onChange={this.handleChangeAllCompleted}\r\n                />\r\n\r\n                <Filter filter={filter} onChange={this.handleChangeFilter} />\r\n\r\n                <ul className=\"list-group\">\r\n                    {filteredTodos.map(({ id, text, completed, editing }) => (\r\n                        <li className=\"list-group-item\" key={id}>\r\n                            {editing ? (\r\n                                <EditTodo\r\n                                    id={id}\r\n                                    text={text}\r\n                                    onCancel={this.handleChangeTodoAttribute}\r\n                                    onSubmit={this.handleUpdateTodoText}\r\n                                />\r\n                            ) : (\r\n                                    <Todo\r\n                                        id={id}\r\n                                        text={text}\r\n                                        completed={completed}\r\n                                        onChange={this.handleChangeTodoAttribute}\r\n                                        onDelete={this.handleClickDelete}\r\n                                    />\r\n                                )}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n\r\n                <button type=\"button\" className=\"btn btn-light\" onClick={this.handleClickDeleteCompleted}>完了済みを全て削除する</button>\r\n            </div>/*container*/\r\n        )\r\n    }\r\n\r\n    handleSubmit = text => {\r\n        const newTodo = {\r\n            id: currentId,\r\n            text,\r\n            completed: false,\r\n            editing: false\r\n        }\r\n        const newTodos = [...this.state.todos, newTodo]\r\n        this.setState({ todos: newTodos })\r\n        currentId++;\r\n    }\r\n\r\n    handleChangeAllCompleted = completed => {\r\n        const newTodos = this.state.todos.map(todo => {\r\n            return {\r\n                ...todo,\r\n                completed\r\n            }\r\n        })\r\n        this.setState({ todos: newTodos })\r\n    }\r\n\r\n\r\n    handleChangeTodoAttribute = (id, key, value) => {\r\n        const newTodos = this.state.todos.map(todo => {\r\n            if (todo.id === id) {\r\n                return {\r\n                    ...todo,\r\n                    [key]: value\r\n                };\r\n            }\r\n\r\n            return todo;\r\n        })\r\n\r\n        this.setState({ todos: newTodos })\r\n    }\r\n\r\n    handleUpdateTodoText = (id, text) => {\r\n        const newTodos = this.state.todos.map(todo => {\r\n            if (todo.id === id) {\r\n                return {\r\n                    ...todo,\r\n                    text,\r\n                    editing: false\r\n                }\r\n            }\r\n            return todo\r\n        });\r\n        this.setState({ todos: newTodos })\r\n    }\r\n\r\n    handleClickDelete = id => {\r\n        const newTodos = this.state.todos.filter(todo => todo.id !== id)\r\n        this.setState({ todos: newTodos })\r\n    }\r\n\r\n    handleClickDeleteCompleted = () => {\r\n        const newTodos = this.state.todos.filter(({ completed }) => !completed)\r\n        this.setState({ todos: newTodos })\r\n    }\r\n\r\n    handleChangeFilter = (filter) => {\r\n        this.setState({ filter })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'//Reactで作った要素をHTMLに埋め込んでくれる\r\n\r\nimport App from './components/App'//componentsの中のApp.jsを読み込んでいる。読み込んで下のReactDOM.render(<App />)に入れている\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))//index.htmlのid=rootの中にApp.jsの中身を入れている"],"sourceRoot":""}